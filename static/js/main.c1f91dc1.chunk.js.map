{"version":3,"sources":["Images/cloudbackgroundRed2.png","styles/Modal.module.css","logo.svg","styles/GameCustomText.module.css","Classes/Utils.js","gameplay/BHUtils.js","gameplay/Block.js","gameplay/BlockSpawner.js","gameplay/Player.js","gameplay/BHMain.js","Resources/texts.js","Containers/BHRound.js","Components/assets/Modal.js","Components/assets/buttons.js","Components/GameDefault.js","Containers/BHGame.js","App.js","serviceWorker.js","index.js","Images/SRHirsch.png","styles/Buttons.module.css"],"names":["module","exports","Utils","stripCantillation","words","replace","split","textArr","map","x","rawString","array","i","length","j","Math","floor","random","BHUtils","screenHeight","window","screen","height","screenWidth","this","roundedRect","ctx","y","width","radius","beginPath","moveTo","lineTo","arcTo","fill","stroke","downwardTriangle","centerTopX","centerTopY","base","adjustY","value","adjustX","U","Block","powerup","type","word","wordType","wordIndex","last","directionH","directionV","riseCount","passedText","highlight","moveTime","broken","color","killed","draw","fillStyle","font","textAlign","fillText","fillRect","arc","PI","update","B","BlockSpawner","level","mainText","decoyText","config","decoyIndex","textIndex","setIndex","num","blockSpawner","lowestBlock","blocks","blockOffset","difficulty","spawnWordType","spawnBlockType","spawnPowerup","attributeWordToBlock","console","log","block","push","shift","powerupChances","easy","spring","springBoots","orbBack","orbForward","hard","round","blockChances","blockTypeFreq","sideways","rising","index","wordChances","wordTypeFreq","spike","Player","gravity","setLowestBlock","xSpeed","ySpeed","springBootsDurability","orbDurability","yDistanceTravelled","direction","dead","win","highestWordIndex","holdingLeftKey","holdingRightKey","strokeStyle","lineWidth","strokeText","img","src","playerImage","moveLeft","moveRight","jump","BSpawn","blockIndex","max","count","drawImage","Image","BHMain","canvas","id","newGame","continueGame","score","fps","then","Date","now","interval","reported","keydown","e","keyCode","player","keyup","showScore","setFirstBlock","exitGame","playing","loop","requestAnimationFrame","delta","backgroundImage","backgroundImagePng","getContext","addEventListener","TextChapters","Genesis","Exodus","Leviticus","Numbers","Deuteronomy","Joshua","Judges","I_Samuel","II_Samuel","I_Kings","II_Kings","Isaiah","Jeremiah","Ezekiel","Hosea","Joel","Amos","Obadiah","Jonah","Micah","Nahum","Habakkuk","Zephaniah","Haggai","Zechariah","Malachi","Psalms","Proverbs","Job","Song_of_Songs","Ruth","Lamentations","Ecclesiastes","Esther","Daniel","Ezra","Nehemiah","I_Chronicles","II_Chronicles","gamePlayConfigs","require","BHRound","updateCanvas","refs","fetchSingleChapterText","fetchString","props","text","startChapter","fetch","response","json","data","removeHTML","he","startVerse","endVerse","filter","verse","join","generateDecoyWords","textWords","decoyTexts","decoyChapters","keys","Object","key","chapterNumber","ceil","Promise","all","decoyWordLists","verseListsToCleanedWords","decoyVerseLists","decoyWords","flat","shuffleArray","checkOverlap","noPrefix","substring","includes","state","ref","Component","Modal","className","classes","children","BtnConfigWide","title","Btn","Config","Wide","onClick","setConfig","GameDefault","options","setParsha","parsha","textName","BHGame","retrieveParsha","calendar_items","url","parshaTextUrlName","parshaStart","parseInt","parshaName","displayValue","en","parshaEnd","setState","TextItem","textUrlName","history","match","setGameDefault","endChapter","gameNumber","gameDefault","gameStart","findIndex","item","catch","err","path","App","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c1f91dc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloudbackgroundRed2.f597f276.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1Obd6\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollable_menu\":\"GameCustomText_scrollable_menu__2-jTm\"};","export default class Utils {\r\n\r\n    removeHTML(textArr) {\r\n        return textArr.map(x => x.replace(/<\\s*a[^>]*>(.*?)<\\s*\\/\\s*a>/g, \"\").replace(/<[^>]*>/g, \"\"));\r\n\r\n    }\r\n\r\n    /*\r\n    * Takes in string returns string\r\n    * */\r\n\r\n    stripVowels(rawString) {\r\n        return rawString.replace(/[\\u0591-\\u05C7]/g, \"\")\r\n    }\r\n\r\n    shuffleArray(array) {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    }\r\n\r\n    /*\r\n    * Takes in string returns array of words\r\n    * */\r\n\r\n    stripCantillation = (words) => {\r\n        return words.replace(/[\\u0591-\\u05AF\\u05c0]|\\(פ\\)|\\(ס\\)|\\[(.*?)]/g, \"\").split(/[\\s\\u05BE]+/);\r\n\r\n    };\r\n\r\n\r\n};","export default class BHUtils {\r\n\r\n    screenHeight = window.screen.height  - 125;\r\n    screenWidth = this.screenHeight * (5/8);\r\n\r\n    roundedRect = (ctx, x, y, width, height, radius) =>{\r\n        ctx.beginPath();\r\n        ctx.moveTo(x, y + radius);\r\n        ctx.lineTo(x, y + height - radius);\r\n        ctx.arcTo(x, y + height, x + radius, y + height, radius);\r\n        ctx.lineTo(x + width - radius, y + height);\r\n        ctx.arcTo(x + width, y + height, x + width, y + height-radius, radius);\r\n        ctx.lineTo(x + width, y + radius);\r\n        ctx.arcTo(x + width, y, x + width - radius, y, radius);\r\n        ctx.lineTo(x + radius, y);\r\n        ctx.arcTo(x, y, x, y + radius, radius);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n    }\r\n\r\n    downwardTriangle = (ctx, centerTopX, centerTopY,height, base) => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(centerTopX, centerTopY);\r\n            ctx.lineTo(centerTopX + base, centerTopY + height);\r\n            ctx.lineTo(centerTopX + (base * 2), centerTopY);\r\n            ctx.fill();\r\n    }\r\n\r\n    adjustY = (value) =>{\r\n        return (value / 800) * this.screenHeight;\r\n    }\r\n    adjustX = (value) =>{\r\n        return (value / 600) * this.screenWidth;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import BHUtils from './BHUtils';\r\nlet U = new BHUtils();\r\n\r\nexport default class Block {\r\n    width = U.adjustX(125);\r\n    height = U.adjustY(25);\r\n    directionH = \"right\";\r\n    directionV = \"down\";\r\n    riseCount = 0;\r\n    passedText = false;\r\n    highlight = false;\r\n    moveTime = 10;\r\n    broken = false;\r\n    color = \"#00bfff\";\r\n    killed = false;\r\n    constructor(x,y,powerup,type,word,wordType,wordIndex,last){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.powerup = powerup;\r\n        this.type = type;\r\n        this.word = word;\r\n        this.wordType = wordType;\r\n        this.wordIndex = wordIndex;\r\n        this.last = last;\r\n        //this.broken = broken;\r\n    }\r\n\r\n    draw = (ctx) => {\r\n        ctx.fillStyle =  this.color;\r\n\r\n        if(this.passedText){\r\n            this.color = \"#0a13ff\";\r\n            ctx.fillStyle =  this.color;\r\n        }\r\n        else if(this.last){\r\n            this.color = \"#a38841\";\r\n            ctx.fillStyle =  this.color;\r\n        }\r\n        else if(this.highlight){\r\n            this.color = \"#5EFF16\";\r\n            ctx.fillStyle =  this.color;\r\n        }\r\n        // else if(this.wordType == \"spike\"){\r\n        //     this.color = \"#ff5046\";\r\n        //     ctx.fillStyle =  this.color;\r\n        // }\r\n        U.roundedRect(ctx,this.x,this.y,this.width,this.height,U.adjustX(5),\"black\");\r\n        //ctx.fillRect(this.x, this.y, this.width, this.height);\r\n        ctx.font = \"bold \" + U.adjustX(22)+ \"px\" + \"'BlinkMacSystemFont','Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue'\";\r\n        ctx.fillStyle = \"white\";\r\n        if(this.color === \"#5EFF16\"){\r\n            ctx.fillStyle = \"#090524\";\r\n        }\r\n        ctx.textAlign = \"center\";\r\n        // if(this.type === \"break\"){\r\n        //     if(this.textNumber >= 0) {\r\n        //         text = window.decoyWords[this.textNumber];\r\n        //     }\r\n        // }\r\n        // else{\r\n        //     if(this.textNumber >= 0) {\r\n        //         text = window.textWords[this.textNumber];\r\n        //     }\r\n        //     //text = this.textNumber;\r\n        // }\r\n\r\n        ctx.fillText(this.word,this.x + this.width/2,this.y + ((this.height/4)*3));\r\n\r\n        if (this.powerup === \"spring\") {\r\n            ctx.fillStyle = \"grey\";\r\n            ctx.fillRect(this.x + U.adjustX(35), this.y - U.adjustY(10), U.adjustX(30), U.adjustY(10));\r\n        } else if (this.powerup === \"springBoots\") {\r\n            ctx.fillStyle = \"blue\";\r\n            ctx.fillRect(this.x + U.adjustX(55), this.y - U.adjustY(25), U.adjustX(15), U.adjustY(10));\r\n            ctx.fillRect(this.x + U.adjustX(35), this.y - U.adjustY(25), U.adjustX(15), U.adjustY(10));\r\n            ctx.fillStyle = \"grey\";\r\n            ctx.fillRect(this.x + U.adjustX(55), this.y - U.adjustY(15), U.adjustX(15), U.adjustY(15));\r\n            ctx.fillRect(this.x + U.adjustX(35), this.y - U.adjustY(15), U.adjustX(15), U.adjustY(15));\r\n        } else if(this.powerup == \"orbBackward\"){\r\n            ctx.beginPath();\r\n            ctx.arc(this.x + (this.width/2), this.y - U.adjustY(15), 10, 0, 2 * Math.PI);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n        else if(this.powerup == \"orbForward\"){\r\n            ctx.beginPath();\r\n            ctx.arc(this.x + (this.width/2), this.y - U.adjustY(15), 10, 0, 2 * Math.PI);\r\n            ctx.fillStyle = \"#5EFF16\";\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n        else if(this.wordType == \"spike\"){\r\n            ctx.fillStyle = \"grey\";\r\n            U.downwardTriangle(ctx,this.x + U.adjustX(this.width * (1/5)),this.y + this.height,U.adjustY(15),U.adjustY(15));\r\n            U.downwardTriangle(ctx,this.x + U.adjustX(this.width * (3/5)),this.y + this.height,U.adjustY(15),U.adjustY(15));\r\n            U.downwardTriangle(ctx,this.x + U.adjustX(this.width * (5/5)),this.y + this.height,U.adjustY(15),U.adjustY(15));\r\n        }\r\n    }\r\n\r\n    update = () => {\r\n        if (this.type === \"sideways\") {\r\n            if (this.x >= U.screenWidth - this.width) {\r\n                this.directionH = \"left\";\r\n            } else if (this.x <= 0) {\r\n                this.directionH = \"right\";\r\n            }\r\n\r\n            if (this.directionH === \"right\") {\r\n                this.x += U.adjustX(2.5);\r\n            } else {\r\n                this.x -= U.adjustX(2.5);\r\n            }\r\n        }\r\n\r\n        else if (this.type === \"rising\") {\r\n            if (this.directionV === \"down\" && this.riseCount === 70) {\r\n                this.directionV = \"up\";\r\n                this.riseCount = 0;\r\n            } else if (this.directionV === \"up\" && this.riseCount === 70){\r\n                this.directionV = \"down\";\r\n                this.riseCount = 0;\r\n            }\r\n            this.riseCount = this.riseCount + 1;\r\n\r\n\r\n            if (this.directionV === \"down\") {\r\n                this.y += U.adjustX(1.25);\r\n            } else {\r\n                this.y -= U.adjustX(1.25);\r\n            }\r\n        }\r\n\r\n        if (this.wordType === \"spike\") {\r\n            if (this.directionH === \"right\") {\r\n                this.x += U.adjustX(1);\r\n                this.moveTime -= 1;\r\n\r\n                if (this.moveTime === 0) {\r\n                    this.directionH = \"left\";\r\n                    this.moveTime = 10;\r\n                }\r\n            } else {\r\n                this.x -= U.adjustX(1);\r\n                this.moveTime -= 1;\r\n\r\n                if (this.moveTime === 0) {\r\n                    this.directionH = \"right\";\r\n                    this.moveTime = 10;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import BHUtils from './BHUtils';\r\nimport Block from \"./Block\";\r\nlet U = new BHUtils();\r\nlet B = new Block();\r\n\r\nexport default class BlockSpawner {\r\n\r\n    decoyIndex = 0;\r\n    textIndex = 0;\r\n    constructor(level,mainText,decoyText,config){\r\n        this.level = level;\r\n        this.mainText = mainText;\r\n        this.decoyText = decoyText;\r\n        this.config = config;\r\n\r\n    }\r\n    setIndex = (num) => {\r\n        this.textIndex = num;\r\n    }\r\n    blockSpawner = (lowestBlock,blocks,blockOffset,difficulty,mainText) => {\r\n        let i;\r\n        if (lowestBlock === 0) {\r\n            i = 1;\r\n        } else {\r\n            i = lowestBlock;\r\n        }\r\n\r\n        //blocks are numbered, run it 60 times\r\n        for (i; i < lowestBlock + 60; i++) {\r\n            //if theres room in the blocks array\r\n            if (i >= blocks.length) {\r\n                let type;\r\n                let powerup = 0;\r\n                let word;\r\n                let wordType;\r\n                let wordIndex;\r\n                let x;\r\n                let y;\r\n\r\n                if (blocks[i-1].wordType === \"decoyWord\" || blocks[i-1].wordType === \"spike\"){\r\n                    if(blocks[i-2].wordType === \"decoyWord\" || blocks[i-1].wordType === \"spike\") {\r\n                        wordType = \"textWord\";\r\n                    }\r\n                    else {\r\n                        wordType = this.spawnWordType(i);\r\n                    }\r\n                }\r\n\r\n\r\n                else if (blocks[i-1].wordType === \"textWord\"){\r\n                    if(blocks[i-2] != null && blocks[i-2].wordType === \"textWord\") {\r\n                        if(blocks[i-3] != null && blocks[i-3].wordType === \"textWord\"){\r\n                            wordType = \"decoyWord\";\r\n                        }\r\n                        else {\r\n                            wordType = this.spawnWordType();\r\n                        }\r\n                    }\r\n                    else {\r\n                        wordType = this.spawnWordType();\r\n                    }\r\n                }\r\n                else {\r\n                    wordType = this.spawnWordType();\r\n                }\r\n\r\n                type = this.spawnBlockType();\r\n\r\n\r\n\r\n\r\n                if (powerup !== 0) {\r\n                }\r\n                else if (wordType === \"textWord\") {\r\n                    powerup = this.spawnPowerup(this.level);\r\n                }\r\n\r\n                [word,wordType,wordIndex] = this.attributeWordToBlock(wordType);\r\n\r\n\r\n                //TODO should really be a param in main \"blocksize\"\r\n                x = Math.random()*(U.screenWidth - B.width);\r\n\r\n                //TODO figure out the levels, max jump =~ 260\r\n                if (wordType === \"decoyWord\" || blocks[i-1].wordType === \"decoyWord\") {\r\n                    y = (blocks[i-1].y) - (((Math.random()*(U.adjustY(50) + (difficulty * U.adjustY(10)))) + U.adjustY(30) + blockOffset) * (2 / 3));\r\n                } else if (wordType === \"spike\") {\r\n                    y = (blocks[i-1].y) - ((Math.random()*(U.adjustY(50) + (difficulty *U.adjustY(10))))+U.adjustY(50) + blockOffset);\r\n                }  else if (blocks[i-1].wordType === \"spike\") {\r\n                    // blocks[i].y = (blocks[i-1].y) - ((Math.random()*(U.adjustY(80) + (difficulty*U.adjustY(25))))+U.adjustY(50) + blockOffset);\r\n                    y = (blocks[i-1].y) - ((Math.random()*(U.adjustY(20) + (difficulty *U.adjustY(10)))) +U.adjustY(10)+ blockOffset);\r\n                }\r\n                else {\r\n                    if(blocks[i-1].type === \"sideways\" || blocks[i-1].type === \"rising\"){\r\n                        y = (blocks[i-1].y) - ((Math.random()*(U.adjustY(45) + (difficulty *U.adjustY(10))))+U.adjustY(40) + blockOffset);\r\n                    }\r\n                    else if(blocks[i-1].wordType === \"textWord\") {\r\n                        y = (blocks[i - 1].y) - ((Math.random() * (U.adjustY(45) + (difficulty * U.adjustY(10)))) + U.adjustY(75) + blockOffset);\r\n                    }\r\n                    else {\r\n                        y = (blocks[i - 1].y) - ((Math.random() * (U.adjustY(45) + (difficulty * U.adjustY(10)))) + U.adjustY(25) + blockOffset);\r\n                    }\r\n\r\n                }\r\n\r\n                let last = false;\r\n                if(this.textIndex === mainText.length){\r\n                    if(wordType != 'decoyWord'){\r\n                        last = true;\r\n                    }\r\n                    else{\r\n                        break;\r\n                    }\r\n                }\r\n                if(this.textIndex > mainText.length){\r\n                    break;\r\n                }\r\n                console.log(wordIndex);\r\n                let block = new Block(x,y,powerup,type,word,wordType,wordIndex,last);\r\n                blocks.push(block);\r\n            }\r\n        }\r\n\r\n        //Remove blocks that are below us now\r\n        for (let i = 0; i < lowestBlock - 2; i++) {\r\n            blocks.shift();\r\n        }\r\n    }\r\n\r\n    spawnPowerup = (level) => {\r\n        const powerupChances = {\r\n            \"easy\": {\r\n                \"spring\": this.config.easy.spring,\r\n                \"springBoots\": this.config.easy.springBoots,\r\n                \"orbBack\": this.config.easy.orbBack,\r\n                \"orbForward\": this.config.easy.orbForward\r\n            },\r\n            \"hard\": {\r\n                \"spring\": this.config.hard.spring,\r\n                \"springBoots\": this.config.hard.springBoots,\r\n                \"orbBack\": this.config.hard.orbBack,\r\n                \"orbForward\": this.config.hard.orbForward\r\n            }\r\n        };\r\n\r\n        if (Math.round(Math.random() * powerupChances[level][\"spring\"]) === 0) {\r\n            return \"spring\";\r\n        } else if (Math.round(Math.random() * powerupChances[level][\"springBoots\"]) === 0) {\r\n            return \"springBoots\";\r\n        } else if(Math.round(Math.random() * powerupChances[level][\"orbBackward\"]) === 0) {\r\n            return \"orbBackward\";\r\n        } else if(Math.round(Math.random() * powerupChances[level][\"orbForward\"]) === 0) {\r\n            return \"orbForward\";\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    spawnBlockType = () => {\r\n        const blockChances = {\r\n            //1 out of every 15 block TODO this is where we will come up with the decoys, probably 1/4,\r\n            \"sideways\": this.config.hard.blockTypeFreq.sideways,\r\n            \"rising\": this.config.hard.blockTypeFreq.rising\r\n        };\r\n\r\n\r\n        if (Math.round(Math.random() * blockChances[\"sideways\"]) === blockChances[\"sideways\"]) {\r\n            return \"sideways\";\r\n        } else if (Math.round(Math.random() * blockChances[\"rising\"]) === blockChances[\"rising\"]) {\r\n            console.log(\"rising block created \" + this.textIndex);\r\n            return \"rising\";\r\n        }\r\n        return \"regular\";\r\n    }\r\n\r\n    spawnWordType = (index) => {\r\n        const wordChances = {\r\n            \"spike\": this.config.hard.wordTypeFreq.spike,\r\n            \"textWord\": 1\r\n        }\r\n        if (index > 5 && Math.round(Math.random()* wordChances[\"spike\"]) === wordChances[\"spike\"]){\r\n            return \"spike\"\r\n        }\r\n        else if (Math.round(Math.random()* wordChances[\"textWord\"]) === wordChances[\"textWord\"]) {\r\n            return \"textWord\";\r\n        }\r\n        else {\r\n            return \"decoyWord\";\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    attributeWordToBlock = (wordType) => {\r\n        let word;\r\n        let wordIndex;\r\n        if(wordType === \"textWord\"){\r\n            word = this.mainText[this.textIndex];\r\n            wordIndex = this.textIndex;\r\n            this.textIndex++;\r\n        }\r\n        else if(wordType === \"decoyWord\"){\r\n            //textNumber = this.decoyIndex;\r\n            if(this.level === \"hard\"){\r\n                word = this.decoyText[this.decoyIndex];\r\n            }\r\n            else{\r\n                //word = \"בַשָּׁמַיִם-הִוא\";\r\n                if(this.decoyIndex % 2 === 0){\r\n                    word = \"בשמים היא\";\r\n                }\r\n                else{\r\n                    word = \"\";\r\n                }\r\n            }\r\n            wordIndex = this.decoyIndex;\r\n            this.decoyIndex++;\r\n        }\r\n        else{\r\n            wordIndex = 0;\r\n            word = \"\";\r\n        }\r\n        return [word,wordType,wordIndex];\r\n    }\r\n}","import BHUtils from './BHUtils';\r\nimport BlockSpawner from './BlockSpawner';\r\nimport playerImage from '../Images/SRHirsch.png';\r\n\r\nconst U = new BHUtils();\r\n\r\nexport default class Player {\r\n    x = U.adjustX(300);\r\n    y = U.adjustY(550);\r\n    width = U.adjustX(80);\r\n    height = U.adjustY(80);\r\n    xSpeed = U.adjustX(6.7);\r\n    ySpeed = 0;\r\n    springBootsDurability = 0;\r\n    orbDurability  = 0;\r\n    yDistanceTravelled = 0;\r\n    direction = \"left\";\r\n    dead = false;\r\n    win = false;\r\n    highestWordIndex = 0;\r\n    constructor(gravity,setLowestBlock,blockSpawner, mainText){\r\n        this.img = new Image();\r\n        //img.src = \"Images/rightPlayer.png\";\r\n        this.img.src = playerImage;\r\n        this.gravity = gravity;\r\n        this.setLowestBlock = setLowestBlock;\r\n        this.BSpawn = blockSpawner;\r\n        this.mainText = mainText;\r\n\r\n    }\r\n\r\n    update = (lowestBlock,difficulty,blocks,blockOffset,ctx,holdingLeftKey, holdingRightKey) => {\r\n        if (this.dead) {\r\n            ctx.font = \"bold \" + U.adjustX(54)+ \"px 'BlinkMacSystemFont','Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue'\";\r\n            ctx.fillStyle = \"#090524\";\r\n            ctx.textAlign = \"center\";\r\n            ctx.strokeStyle = 'black';\r\n            ctx.lineWidth = 1;\r\n            ctx.fillText(\"Game Over:\", U.screenWidth / 2, U.screenHeight / 2);\r\n            ctx.strokeText(\"Game Over:\", U.screenWidth / 2, U.screenHeight / 2);\r\n            ctx.font = \"bold \" + U.adjustX(36)+ \"px 'BlinkMacSystemFont','Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue'\";\r\n            ctx.fillStyle = \"#5EFF16\";\r\n            ctx.fillText(\"Press 'c' to Continue\", U.screenWidth / 2, (U.screenHeight / 2) + 50);\r\n            ctx.strokeText(\"Press 'c' to Continue\", U.screenWidth / 2, (U.screenHeight / 2) + 50);\r\n            ctx.fillText(\"Press 'n' to Start a New Game\", U.screenWidth / 2, (U.screenHeight / 2) + 100);\r\n            ctx.strokeText(\"Press 'n' to Start a New Game\", U.screenWidth / 2, (U.screenHeight / 2) + 100);\r\n\r\n        }\r\n        else if(this.win){\r\n            this.ySpeed = 0;\r\n            this.xSpeed = 0;\r\n            ctx.font = \"bold \" + U.adjustX(45)+ \"px 'BlinkMacSystemFont','Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue'\";\r\n            ctx.fillStyle = \"#090524\";\r\n            ctx.textAlign = \"center\";\r\n            ctx.strokeStyle = 'black';\r\n            ctx.lineWidth = 1;\r\n            ctx.fillText(\"Congradulations!\", U.screenWidth / 2, U.screenHeight / 2);\r\n            ctx.strokeText(\"Congradulations!\", U.screenWidth / 2, U.screenHeight / 2);\r\n            ctx.font = \"bold \" + U.adjustX(36)+ \"px 'BlinkMacSystemFont','Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue'\";\r\n            ctx.fillStyle = \"#5EFF16\";\r\n            ctx.fillText(\"Press 'n' to Start a New Game\", U.screenWidth / 2, (U.screenHeight / 2) + 100);\r\n            ctx.strokeText(\"Press 'n' to Start a New Game\", U.screenWidth / 2, (U.screenHeight / 2) + 100);\r\n\r\n        }\r\n        else {\r\n            this.ySpeed += this.gravity;\r\n            if (this.y <= U.screenHeight / 2 - U.adjustY(100) && this.ySpeed <= 0) {\r\n                for (let i = 0; i < blocks.length; i++) {\r\n                    blocks[i].y -= this.ySpeed;\r\n                }\r\n            } else {\r\n                this.y += this.ySpeed;\r\n            }\r\n            this.yDistanceTravelled -= this.ySpeed;\r\n        }\r\n\r\n        //A key pressed\r\n        if (holdingLeftKey) {\r\n            this.direction = \"left\";\r\n            //this.img.src = \"Images/leftPlayer.png\";\r\n            this.img.src = playerImage;\r\n            this.moveLeft();\r\n        }\r\n        //D key pressed\r\n        if (holdingRightKey) {\r\n            this.direction = \"right\";\r\n            //this.img.src = \"Images/rightPlayer.png\";\r\n            this.img.src = playerImage;\r\n            this.moveRight();\r\n        }\r\n\r\n        //Check for jump\r\n        for (let i = 0; i < blocks.length; i++) {\r\n            if (this.ySpeed >= 0) {\r\n                if (this.x >= blocks[i].x - this.width + U.adjustX(15) && this.x <= blocks[i].x + blocks[i].width - U.adjustX(15) &&\r\n                    this.y >= blocks[i].y - this.height && this.y <= blocks[i].y + blocks[i].height - this.height) {\r\n                    if (blocks[i].wordType === \"decoyWord\") {\r\n                        blocks[i].broken = true;\r\n                    } else if (blocks[i].wordType === \"spike\") {\r\n                        this.jump(blocks, i,lowestBlock);\r\n                        //blocks[i] = 0;\r\n                        blocks[i].wordType = \"wordText\";\r\n                        /*blocks[i].killed = true;*/\r\n                        blocks[i].word = '';\r\n                        blocks[i].color = 'red';\r\n                    } else {\r\n                        if(blocks[i].last){\r\n                            console.log(\"Win\");\r\n                            this.win = true;\r\n                        }\r\n                        this.jump(blocks, i,lowestBlock);\r\n                        //    blocks[i].passedText = true\r\n                    }\r\n                }\r\n            }\r\n            if (this.y > blocks[i].y) {\r\n                //Check for hit spike\r\n                if (blocks[i].wordType === \"spike\") {\r\n                    if (this.x >= blocks[i].x - this.width + U.adjustX(28) && this.x <= blocks[i].x + blocks[i].width - U.adjustX(28) &&\r\n                        this.y >= blocks[i].y - blocks[i].height  && this.y <= blocks[i].y + blocks[i].height) {\r\n                        this.dead = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for (let i = blocks.length-1; i > 0; i--) {\r\n            if (blocks[i].y > U.screenHeight) {\r\n                this.setLowestBlock(i+1);\r\n                lowestBlock = i + 1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.y >= blocks[lowestBlock].y || this.y >= U.screenHeight) {\r\n            this.dead = true;\r\n        }\r\n\r\n        if (lowestBlock >= 45) {\r\n            if (difficulty < 0) {\r\n                difficulty += 1;\r\n            }\r\n            this.BSpawn.blockSpawner(lowestBlock,blocks,blockOffset,difficulty,this.mainText);\r\n        }\r\n\r\n        // for (let i = 0; i < blocks.length; i++) {\r\n        //     if (blocks[i].y < this.y + this.height) {\r\n        //         break;\r\n        //     }\r\n        //     if(blocks[i].type !== \"break\") {\r\n        //         blocks[i].passedText = true;\r\n        //     }\r\n        // }\r\n    }\r\n    jump = (blocks,blockIndex,lowestBlock) => {\r\n        if(blocks[blockIndex].wordType === 'textWord') {\r\n            console.log(\"high \" + this.highestWordIndex);\r\n            this.highestWordIndex = Math.max(this.highestWordIndex, blocks[blockIndex].wordIndex);\r\n            console.log(\"word \" + blocks[blockIndex].wordIndex)\r\n            console.log( Math.max(this.highestWordIndex, blocks[blockIndex].wordIndex));\r\n        }\r\n        let block = blocks[blockIndex];\r\n        let powerup = block.powerup;\r\n        let type = block.type;\r\n        let wordType = block.wordType;\r\n        //this.ySpeed = U.adjustY( -13.2);\r\n        this.ySpeed = U.adjustY( -11.5);\r\n\r\n        if (powerup === \"springBoots\") {\r\n            this.springBootsDurability = 6;\r\n        }\r\n\r\n        if (powerup === \"orbBackward\") {\r\n            this.orbDurability = 10;\r\n        }\r\n\r\n\r\n        if (this.orbDurability !== 0) {\r\n            for (let i = lowestBlock; i < blocks.length; i++) {\r\n                if (blocks[i].y <= this.y + this.height - blocks[i].height) {\r\n                    block.powerup = 0;\r\n                    break;\r\n                }\r\n                if(blocks[i].wordType !== \"decoyWord\") {\r\n                    blocks[i].passedText = true;\r\n                }\r\n            }\r\n            this.orbDurability -= 1;\r\n\r\n        }\r\n        if (powerup === \"orbForward\") {\r\n            let i = blockIndex + 1;\r\n            let count = 0;\r\n            while(count < 5){\r\n                while(blocks[i].wordType === \"decoyWord\"){\r\n                    i++;\r\n                }\r\n                blocks[i].highlight = true;\r\n                i++;\r\n                count++;\r\n            }\r\n            block.powerup = 0;\r\n        }\r\n\r\n        if (wordType === \"textWord\") {\r\n            if (powerup === \"spring\") {\r\n               // this.ySpeed = U.adjustY(-20);\r\n                this.ySpeed = U.adjustY(-14);\r\n            }\r\n        }\r\n\r\n        if (this.springBootsDurability !== 0) {\r\n            this.ySpeed = U.adjustY(-13);\r\n            this.springBootsDurability -= 1;\r\n        }\r\n        // for (let i = lowestBlock; i < blocks.length; i++) {\r\n        //     if (blocks[i].y <= this.y + this.height - blocks[i].height) {\r\n        //         break;\r\n        //     }\r\n        //     if(blocks[i].type !== \"break\") {\r\n        //         blocks[i].passedText = true;\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    moveLeft = () => {\r\n        this.x -= this.xSpeed;\r\n        if (this.x <= -this.width) {\r\n            this.x = U.screenWidth;\r\n        }\r\n    }\r\n\r\n    moveRight = () => {\r\n        this.x += this.xSpeed;\r\n        if (this.x >= U.screenWidth) {\r\n            this.x = -this.width;\r\n        }\r\n    }\r\n\r\n    draw = (ctx) => {\r\n        ctx.drawImage(this.img, this.x, this.y, this.width, this.height);\r\n\r\n        if (this.springBootsDurability !== 0) {\r\n            if (this.direction === \"right\") {\r\n                ctx.fillStyle = \"blue\";\r\n                ctx.fillRect(this.x + U.adjustX(10), this.y + U.adjustY(66), U.adjustX(15), U.adjustY(10));\r\n                ctx.fillRect(this.x + U.adjustX(33), this.y + U.adjustY(66), U.adjustX(15), U.adjustY(10));\r\n                ctx.fillStyle = \"grey\";\r\n                ctx.fillRect(this.x + U.adjustX(10), this.y + U.adjustY(76), U.adjustX(15), U.adjustY(15));\r\n                ctx.fillRect(this.x + U.adjustX(33), this.y + U.adjustY(76), U.adjustX(15), U.adjustY(15));\r\n            } else {\r\n                ctx.fillStyle = \"blue\";\r\n                ctx.fillRect(this.x + U.adjustX(30), this.y + U.adjustY(66), U.adjustX(15), U.adjustY(10));\r\n                ctx.fillRect(this.x + U.adjustX(53), this.y + U.adjustY(66), U.adjustX(15), U.adjustY(10));\r\n                ctx.fillStyle = \"grey\";\r\n                ctx.fillRect(this.x + U.adjustX(30), this.y + U.adjustY(76), U.adjustX(15), U.adjustY(15));\r\n                ctx.fillRect(this.x + U.adjustX(53), this.y + U.adjustY(76), U.adjustX(15), U.adjustY(15));\r\n            }\r\n        }\r\n    }\r\n}","import Block from './Block';\r\nimport BlockSpawner from './BlockSpawner';\r\nimport Player from './Player';\r\nimport BHUtils from './BHUtils';\r\nimport backgroundImagePng from '../Images/cloudbackgroundRed2.png';\r\n// import {updateDoodleGame} from \"../doodleRest\";\r\n\r\nconst U = new BHUtils();\r\n\r\nexport default class BHMain {\r\n    holdingLeftKey = false;\r\n    holdingRightKey = false;\r\n    dead = false;\r\n    difficulty = 0;\r\n    score = 0;\r\n    //gravity = U.adjustY(0.34);\r\n    gravity = U.adjustY(0.25);\r\n    lowestBlock = 0;\r\n    blocks = [];\r\n    blockOffset = U.adjustY(50);\r\n    fps = 60;//frames per second\r\n    then = Date.now();\r\n    interval = 1000/this.fps;\r\n    delta;\r\n    now;\r\n    playing;\r\n    reported = false;\r\n    id = '';\r\n\r\n\r\n    constructor(canvas, level,mainText,decoyText,id,newGame, continueGame, setIndex, config) {\r\n        console.log(mainText);\r\n        this.mainText = mainText;\r\n        this.ctx = canvas.getContext(\"2d\");\r\n        canvas.width = U.screenWidth;\r\n        canvas.height = U.screenHeight;\r\n\r\n        window.addEventListener('keydown',this.keydown,false);\r\n        window.addEventListener('keyup',this.keyup,false);\r\n        this.config = config;\r\n        this.BSpawn = new BlockSpawner(level, mainText,decoyText, this.config)\r\n        this.level = level;\r\n        this.setFirstBlock(this.blocks);\r\n        this.player = new Player(this.gravity,this.setLowestBlock,this.BSpawn,this.mainText);\r\n        this.BSpawn.blockSpawner(this.lowestBlock,this.blocks,this.blockOffset,this.difficulty,this.mainText);\r\n        this.id = id;\r\n        this.newGame = newGame;\r\n        this.continueGame =  continueGame;\r\n        this.setIndex = setIndex;\r\n        this.playing = true;\r\n        this.loop();\r\n    }\r\n    \r\n    keydown = (e) => {\r\n        //TODO: change to avoid deprication\r\n        if (e.keyCode === 37) {\r\n            this.holdingLeftKey = true;\r\n        }   else if (e.keyCode === 39) {\r\n            this.holdingRightKey = true;\r\n        }\r\n\r\n        //when game ends, and the press play again, things reset (TODO this should be a self contained function)\r\n        else if (e.keyCode === 67 && this.player.dead) {\r\n            //continue - Points need to reset\r\n            //continue - Points need to reset\r\n            this.blocks = [];\r\n            this.lowestBlock = 0;\r\n            this.difficulty = 0;\r\n            this.score = 0;\r\n            this.player.springBootsDurability = 0;\r\n            this.blocks.push(new Block());\r\n            this.blocks[0].x = U.adjustX(300);\r\n            this.blocks[0].y = U.adjustY(650);\r\n            this.blocks[0].type = 0;\r\n            this.blocks[0].powerup = 0;\r\n            this.blocks[0].word = \"\";\r\n            this.reported = false;\r\n            this.BSpawn.setIndex(this.player.highestWordIndex);\r\n            this.BSpawn.blockSpawner(this.lowestBlock,this.blocks,this.blockOffset,this.difficulty, this.mainText);\r\n            this.player.yDistanceTravelled = 0;\r\n            this.player.x = U.adjustX(300);\r\n            this.player.y = U.adjustY(550);\r\n            this.player.dead = false;\r\n            this.continueGame();\r\n        }\r\n\r\n        if (e.keyCode === 78 && (this.player.dead || this.player.win)) {\r\n            //continue - Points need to reset\r\n          this.newGame();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    keyup = (e) => {\r\n        if (e.keyCode === 37) {\r\n            this.holdingLeftKey = false;\r\n        } else if (e.keyCode === 39) {\r\n            this.holdingRightKey = false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    showScore = (yDistanceTravelled,score,ctx) => {\r\n        if (yDistanceTravelled > score) {\r\n            this.score = Math.round(yDistanceTravelled);\r\n        }\r\n        //TODO: change this\r\n        ctx.font = \"bold 36px Arial\";\r\n        ctx.fillStyle = \"black\";\r\n        ctx.textAlign = \"left\";\r\n        ctx.fillText(score, 18, 40);\r\n    }\r\n\r\n    setFirstBlock = (blocks) => {\r\n        let x = U.adjustX(300);\r\n        let y = U.adjustY(650);\r\n        let type = 0;\r\n        let powerup = 0;\r\n        let word = \"\";\r\n        blocks.push(new Block(x,y,powerup,type,word));\r\n    }\r\n    setLowestBlock = (num) =>{\r\n        this.lowestBlock = num;\r\n    }\r\n\r\n    exitGame =() =>{\r\n //       updateDoodleGame(this.id,\"exit\",this.score)\r\n        this.playing = false;\r\n    }\r\n\r\n\r\n    loop =()=> {\r\n            if(this.playing) {\r\n                requestAnimationFrame(this.loop);\r\n            }\r\n\r\n            //This sets the FPS to 60\r\n            this.now = Date.now();\r\n            this.delta = this.now - this.then;\r\n            //if an interval has elapsed, rerender\r\n            if (this.delta > this.interval) {\r\n                let backgroundImage = new Image();\r\n                backgroundImage.src = backgroundImagePng;\r\n                this.ctx.fillStyle = \"#ffefe4\";\r\n                this.ctx.fillRect(0, 0, U.screenWidth, U.screenHeight);\r\n                this.ctx.drawImage(backgroundImage, 0, 0, U.screenWidth, U.screenHeight);\r\n                this.ctx.fill();\r\n                for (let i = 0; i < this.blocks.length; i++) {\r\n                    if (!this.blocks[i].broken) {\r\n                        this.blocks[i].update();\r\n                        this.blocks[i].draw(this.ctx);\r\n                    }\r\n                }\r\n\r\n\r\n                this.player.update(this.lowestBlock, this.difficulty, this.blocks, this.blockOffset, this.ctx, this.holdingLeftKey, this.holdingRightKey);\r\n                if (!this.player.dead) {\r\n                    this.player.draw(this.ctx);\r\n                }\r\n\r\n                this.setIndex(this.player.highestWordIndex);\r\n\r\n                this.showScore(this.player.yDistanceTravelled, this.score, this.ctx);\r\n\r\n                this.ctx.fill();\r\n                this.then = this.now - (this.delta % this.interval);\r\n            }\r\n            if(this.player.dead){\r\n                if(!this.reported){\r\n  //                  updateDoodleGame(this.id,\"died\",this.score);\r\n                }\r\n                this.reported = true;\r\n            }\r\n\r\n\r\n    }\r\n\r\n}","export const TextChapters = {\r\n    tanakh: {\r\n        Genesis: 50,\r\n        Exodus: 40,\r\n        Leviticus: 27,\r\n        Numbers: 36,\r\n        Deuteronomy: 34,\r\n        Joshua: 24,\r\n        Judges: 21,\r\n        I_Samuel: 31,\r\n        II_Samuel: 24,\r\n        I_Kings: 22,\r\n        II_Kings: 25,\r\n        Isaiah: 66,\r\n        Jeremiah: 52,\r\n        Ezekiel: 48,\r\n        Hosea: 14,\r\n        Joel: 4,\r\n        Amos: 9,\r\n        Obadiah: 1,\r\n        Jonah: 4,\r\n        Micah: 7,\r\n        Nahum: 3,\r\n        Habakkuk: 3,\r\n        Zephaniah: 3,\r\n        Haggai: 2,\r\n        Zechariah: 14,\r\n        Malachi: 3,\r\n        Psalms: 150,\r\n        Proverbs: 31,\r\n        Job: 42,\r\n        Song_of_Songs: 8,\r\n        Ruth: 4,\r\n        Lamentations: 5,\r\n        Ecclesiastes: 12,\r\n        Esther: 10,\r\n        Daniel: 12,\r\n        Ezra: 10,\r\n        Nehemiah: 13,\r\n        I_Chronicles: 29,\r\n        II_Chronicles: 36\r\n    },\r\n    mishnah: {\r\n        Mishnah_Berakhot: 9,\r\n        Mishnah_Peah: 8,\r\n        Mishnah_Demai: 7,\r\n        Mishnah_Kilayim: 9,\r\n        Mishnah_Sheviit: 10,\r\n        Mishnah_Terumot: 11,\r\n        Mishnah_Maasrot: 5,\r\n        Mishnah_Maaser_Sheni: 5,\r\n        Mishnah_Challah: 4,\r\n        Mishnah_Orlah: 3,\r\n        Mishnah_Bikkurim: 4,\r\n        Mishnah_Shabbat: 24,\r\n        Mishnah_Eruvin: 10,\r\n        Mishnah_Pesachim: 10,\r\n        Mishnah_Shekalim: 8,\r\n        Mishnah_Yoma: 8,\r\n        Mishnah_Sukkah: 5,\r\n        Mishnah_Beitzah: 5,\r\n        Mishnah_Rosh_Hashanah: 4,\r\n        Mishnah_Taanit: 4,\r\n        Mishnah_Megillah: 4,\r\n        Mishnah_Moed_Katan: 3,\r\n        Mishnah_Chagigah: 3,\r\n        Mishnah_Yevamot: 16,\r\n        Mishnah_Ketubot: 13,\r\n        Mishnah_Nedarim: 11,\r\n        Mishnah_Nazir: 9,\r\n        Mishnah_Sotah: 9,\r\n        Mishnah_Gittin: 9,\r\n        Mishnah_Kiddushin: 4,\r\n        Mishnah_Bava_Kamma: 10,\r\n        Mishnah_Bava_Metzia: 10,\r\n        Mishnah_Bava_Batra: 10,\r\n        Mishnah_Sanhedrin: 11,\r\n        Mishnah_Makkot: 3,\r\n        Mishnah_Shevuot: 8,\r\n        Mishnah_Eduyot: 8,\r\n        Mishnah_Avodah_Zarah: 5,\r\n        Mishnah_Avot: 5,\r\n        Mishnah_Horayot: 3,\r\n        Mishnah_Zevachim: 14,\r\n        Mishnah_Menachot: 13,\r\n        Mishnah_Chullin: 12,\r\n        Mishnah_Bekhorot: 9,\r\n        Mishnah_Arakhin: 9,\r\n        Mishnah_Temurah: 7,\r\n        Mishnah_Keritot: 6,\r\n        Mishnah_Meilah: 6,\r\n        Mishnah_Tamid: 7,\r\n        Mishnah_Middot: 5,\r\n        Mishnah_Kinnim: 3,\r\n        Mishnah_Kelim: 30,\r\n        Mishnah_Oholot: 18,\r\n        Mishnah_Negaim: 14,\r\n        Mishnah_Parah: 12,\r\n        Mishnah_Tahorot: 10,\r\n        Mishnah_Mikvaot: 10,\r\n        Mishnah_Niddah: 10,\r\n        Mishnah_Makhshirin: 6,\r\n        Mishnah_Zavim: 5,\r\n        Mishnah_Tevul_Yom: 4,\r\n        Mishnah_Yadayim: 4,\r\n        Mishnah_Oktzin: 3\r\n    },\r\n    talmud: {\r\n        Berakhot: 64,\r\n        Shabbat: 157,\r\n        Eruvin: 105,\r\n        Pesachim: 121,\r\n        Rosh_Hashanah: 35,\r\n        Yoma: 88,\r\n        Sukkah: 56,\r\n        Beitzah: 40,\r\n        Taanit: 31,\r\n        Megillah: 32,\r\n        Moed_Katan: 29,\r\n        Chagigah: 27,\r\n        Yevamot: 122,\r\n        Ketubot: 112,\r\n        Nedarim: 91,\r\n        Nazir: 66,\r\n        Sotah: 49,\r\n        Gittin: 90,\r\n        Kiddushin: 82,\r\n        Bava_Kamma: 119,\r\n        Bava_Metzia: 119,\r\n        Bava_Batra: 176,\r\n        Sanhedrin: 113,\r\n        Makkot: 24,\r\n        Shevuot: 49,\r\n        Avodah_Zarah: 76,\r\n        Horayot: 14,\r\n        Zevachim: 120,\r\n        Menachot: 110,\r\n        Chullin: 142,\r\n        Bekhorot: 61,\r\n        Arakhin: 34,\r\n        Temurah: 34,\r\n        Keritot: 28,\r\n        Meilah: 22,\r\n        Tamid: 8,\r\n        Niddah: 73\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n// import {textWords, ecc, exodus} from \"../Resources/text_samples\";\r\nimport Utils from '../Classes/Utils';\r\nimport BHMain from \"../gameplay/BHMain\";\r\nimport {TextChapters} from \"../Resources/texts\";\r\nimport generate from \"@babel/generator\";\r\n\r\nconst gamePlayConfigs = require('../configs/gamePlayConfigs')\r\n\r\nconst U = new Utils();\r\n\r\nexport default class BHRound extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n            console.log(\"URL name : \" + this.props.text);\r\n            console.log(\"URL chapter : \" + this.props.startChapter);\r\n            this.updateCanvas();\r\n            this.fetchSingleChapterText()\r\n                .then((textWords) => {\r\n                    return this.generateDecoyWords(this.props.text, textWords)\r\n                        .then((decoyWords) => {\r\n                            let game = new BHMain(this.refs.canvas, this.props.level, textWords, decoyWords, 1, this.props.newGame, this.props.continueGame, this.setIndex, gamePlayConfigs);\r\n                        })\r\n                })\r\n    }\r\n\r\n    updateCanvas = () => {\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n        ctx.fillRect(0, 0, 100, 100);\r\n    };\r\n\r\n    //*\r\n    // Takes a text, start chapter, start and end verse, returns a promise with data = array of full hebrew verse\r\n    // */\r\n    fetchSingleChapterText = () => {\r\n        let fetchPromise;\r\n        let fetchString = 'https://www.sefaria.org/api/texts/' + this.props.text + '.' + this.props.startChapter + '?custom=ashkenazi';\r\n        fetchPromise = fetch(fetchString)\r\n            .then((response) => {\r\n                return response.json();\r\n            }).then((data) => {\r\n                data['he'] = U.removeHTML(data.he);\r\n                if (this.props.startVerse && this.props.endVerse) {\r\n                    console.log(\"Haftorah 1 chapater\");\r\n                    data['he'] = data['he'].filter((verse, index) => index >= this.props.startVerse - 1 && index < this.props.endVerse);\r\n                }\r\n                return data['he'];\r\n            }).then((data) => {\r\n                return U.stripCantillation(data.join(\" \"))\r\n            })\r\n        return fetchPromise;\r\n    };\r\n\r\n    /*\r\n    * Takes the text chosen for the game and the list of words that that text contains\r\n    * Returns a list of decoy words\r\n    * */\r\n    generateDecoyWords = (text, textWords) => {\r\n        let decoyTexts = [];\r\n        let decoyChapters = [];\r\n        for (let i = 0; i < 2; i++) {\r\n            let keys = Object.keys(TextChapters['tanakh']);\r\n            let key = keys[Math.floor(Math.random() * keys.length)]\r\n            let chapterNumber = Math.ceil(Math.random() * TextChapters['tanakh'][key]);\r\n            console.log(key + \" \" + chapterNumber)\r\n            decoyTexts.push(key);\r\n            decoyChapters.push(chapterNumber);\r\n        }\r\n\r\n        return Promise.all(decoyTexts.map((chapterNumber, index) => {\r\n            let fetchString = 'https://www.sefaria.org/api/texts/' + decoyTexts[index] + '.' + decoyChapters[index] + '?custom=ashkenazi';\r\n            return fetch(fetchString)\r\n                .then((response) => {\r\n                    return response.json();\r\n                }).then((data) => {\r\n                    //now were return an array of promises that resolve to provide the hebrew text of its chapter\r\n                    return U.removeHTML(data.he);\r\n                })\r\n        })).then(decoyWordLists => {\r\n            return U.stripCantillation(this.verseListsToCleanedWords(decoyWordLists,textWords).join(\" \"));\r\n        })\r\n    };\r\n\r\n    /*\r\n    * Takes in two lists of words, returns an array of strings that are unique between them, shuffled\r\n    * */\r\n    verseListsToCleanedWords = (decoyVerseLists,textWords) => {\r\n        let decoyWords = decoyVerseLists.flat();\r\n        decoyWords = this.shuffleArray(decoyWords.join(' ').split(/[\\s\\u05BE]+/).filter(x => this.checkOverlap(x, textWords)));\r\n        return decoyWords;\r\n    };\r\n\r\n\r\n    shuffleArray = (array) => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    };\r\n\r\n    checkOverlap = (x, textWords) => {\r\n        let noPrefix = textWords.map(x => x.replace(/[\\u0591-\\u05C7]/g, '').substring(1));\r\n        textWords = textWords.map(x => x.replace(/[\\u0591-\\u05C7]/g, ''));\r\n        if (!textWords.includes(x)) {\r\n            if (!noPrefix.includes(x.replace(/[\\u0591-\\u05C7]/g, '').substring(1))) {\r\n                if (!noPrefix.includes(x.replace(/[\\u0591-\\u05C7]/g, ''))) {\r\n                    if (!textWords.includes(x.replace(/[\\u0591-\\u05C7]/g, '').substring(1))) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    setIndex = () => {\r\n        console.log(\"Index Set\")\r\n    };\r\n\r\n    render() {\r\n        let screenHeight = 800;\r\n        let screenWidth = 500;\r\n        screenHeight = window.screen.height;\r\n        screenWidth = window.screen.height * (5 / 8);\r\n        return (\r\n            <canvas ref=\"canvas\" width={0} height={0}/>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport classes from '../../styles/Modal.module.css';\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <div className={classes.Modal}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from '../../styles/Buttons.module.css';\r\n\r\n\r\nexport const BtnConfig = (props) => {\r\n\r\n    return (\r\n        <button className={'col-sm ' + classes.Btn + ' ' + classes.Config} onClick={() => props.setConfig(props.response)}>{props.children}</button>\r\n    )\r\n}\r\n\r\n\r\nexport const BtnConfigSmall = (props) => {\r\n    let title = <h3>{props.title}</h3>;\r\n    return (\r\n            <button className={\"col-sm \" +  classes.Btn + ' ' + classes.Config + classes.Small} onClick={() => props.setConfig(props.response)}>{props.children}</button>\r\n            )\r\n}\r\n\r\nexport const BtnConfigWide = (props) => {\r\n    let title = <h3>{props.title}</h3>;\r\n    return (\r\n        <div className={'col'}>\r\n            {props.title && title}\r\n            <button className={ classes.Btn + ' ' + classes.Config + ' ' + classes.Wide} onClick={() => props.setConfig(props.response)}>{props.children}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const BtnBig = (props) => {\r\n\r\n    return (\r\n            <button className={classes.Btn + ' ' + classes.Big} onClick={props.onClick}>{props.children}</button>\r\n    )\r\n}\r\n\r\n\r\nexport const BtnAnswer= (props) => {\r\n\r\n    return (\r\n        <div className={'col-sm '}>\r\n            <button className={classes.Btn + ' ' + classes.Answer} onClick={() => props.resetRoundHandler((props.label.correct ? (4 - props.clue) * 100 : 0), props.label.correct)} >\r\n                <p>{props.label.textNameHebrew}</p>\r\n                <p>{props.label.textNameEnglish}</p>\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport const BtnSmall = (props) => {\r\n\r\n    return (\r\n        <div className={'col-sm '}>\r\n            <button className={classes.Btn + ' ' + classes.Small} onClick={props.onClick} >\r\n                <p>{props.children}</p>\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport classes from '../styles/GameCustomText.module.css';\r\nimport Modal from './assets/Modal';\r\nimport {BtnConfigSmall, BtnConfigWide} from \"./assets/buttons\";\r\n\r\nconst GameDefault = (props) => {\r\n\r\n    let options =   (<\r\n        div className={'row'}>\r\n        <BtnConfigWide setConfig={props.setParsha} title={\"Parshat Hashavua\"}>{props.parsha.textName}</BtnConfigWide>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n    return (\r\n        <Modal>\r\n            <h1>Game: בשמים היא</h1>\r\n            <p>Select a text</p>\r\n            {options}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default GameDefault;\r\n\r\nexport const GameDefaultLevel = (props) => {\r\n    return (\r\n        <Modal>\r\n            <h1>Game: בשמים היא</h1>\r\n            <p>Select a level</p>\r\n            <div className={'row'}>\r\n                <BtnConfigWide setConfig={() => props.setLevel('easy')}>Easy</BtnConfigWide>\r\n                <BtnConfigWide setConfig={() => props.setLevel('hard')}>Hard</BtnConfigWide>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport BHRound from \"./BHRound\";\r\n\r\nimport {Switch, Route} from \"react-router-dom\";\r\n\r\nimport GameDefault from \"../Components/GameDefault\";\r\n\r\nexport default class BHGame extends Component {\r\n\r\n    constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                textUrlName: '',\r\n                startChapter: 'Chapters',\r\n                startVerse: 0,\r\n                endChapter: 0,\r\n                endVerse: 0,\r\n                textName: 'Sefarim',\r\n                parsha: new TextItem('',0,\"\",0),\r\n                gameDefault: true,\r\n                gameStart: false,\r\n            };\r\n            this.props.history.push(`${this.props.match.url}/`)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let fetchString = 'https://www.sefaria.org/api/calendars';\r\n        return fetch(fetchString)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                this.retrieveParsha(data, data.calendar_items.findIndex(item =>  item.title.en === \"Parashat Hashavua\"));\r\n                this.setGameDefault();\r\n            }).catch((err)=> {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    retrieveParsha = (data,index) =>{\r\n        let text = data.calendar_items[index].url.split(\"-\")[0].split(\".\");\r\n        let parshaTextUrlName = text[0];\r\n        let parshaStart = parseInt(text[1]);\r\n        let parshaName = data.calendar_items[index].displayValue.en.split(\"-\")[0];\r\n        let parshaEnd = data.calendar_items[index].url.split(\"-\")[0].split(\".\")[0] +\r\n            data.calendar_items[index].url.split(\"-\")[1];\r\n\r\n        this.setState({\r\n            parsha : new TextItem(parshaTextUrlName,parshaStart,parshaName,parshaEnd)\r\n        })\r\n    }\r\n\r\n    setParsha = () =>{\r\n        this.setState({\r\n            textUrlName : this.state.parsha.textUrlName,\r\n            startChapter : this.state.parsha.startChapter\r\n        },() => this.props.history.push(`${this.props.match.url}/gamePlay`))\r\n    }\r\n\r\n\r\n    setGameDefault = () => {\r\n        this.setState({\r\n            //           gameDefault: true,\r\n            //           gamePlay: false,\r\n            textUrlName: '',\r\n            startChapter: 'Chapters',\r\n            textName: 'Sefarim',\r\n            startVerse: 0,\r\n            endChapter: 0,\r\n            endVerse: 0,\r\n            level:'',\r\n            gameNumber: this.state.gameNumber + 1\r\n        }, () => this.props.history.push(`${this.props.match.url}/gameDefault`))\r\n    }\r\n\r\n\r\n\r\n    continueGame = () =>{\r\n        console.log(\"Continue game\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route path={`${this.props.match.url}/gamePlay`}>\r\n                        <BHRound\r\n                            level = {\"hard\"}\r\n                            newGame = {this.setGameDefault}\r\n                            continueGame = {this.continueGame}\r\n                            text={this.state.parsha.textUrlName}\r\n                            startChapter={this.state.parsha.startChapter}\r\n                        />\r\n                    </Route>\r\n                    <Route path={`${this.props.match.url}/gameDefault`}>\r\n                        <GameDefault setParsha={this.setParsha}\r\n                                     parsha={this.state.parsha}\r\n                                     textUrlName={this.state.textUrlName}\r\n                                     startChapter={this.state.startChapter}/>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n*  For parshiyot \"textName\" refers to name of parsha, texturlname refers to name of Sefer\r\n* */\r\nclass TextItem {\r\n    constructor(textUrlName,startChapter,textName,endChapter, startVerse = 0, endVerse = 0){\r\n        this.textUrlName = textUrlName;\r\n        this.startChapter = startChapter;\r\n        this.textName = textName;\r\n        this.endChapter = endChapter;\r\n        this.startVerse = startVerse;\r\n        this.endVerse = endVerse;\r\n    }\r\n}","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport BHGame from './Containers/BHGame';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <div className=\"App\">\n            <Switch>\n                 <Route path=\"/bashamayim-hi\" component={BHGame}/>\n             </Switch>\n         </div>\n    </div>\n  );\n}\n\nexport default App;\n//\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/SRHirsch.0135d99e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Buttons_Btn__1kwGj\",\"Answer\":\"Buttons_Answer__3McP4\",\"Big\":\"Buttons_Big__1yiXM\",\"Config\":\"Buttons_Config__1lmL9\",\"Small\":\"Buttons_Small__3mr-4\",\"Wide\":\"Buttons_Wide__g8D7l\"};"],"sourceRoot":""}